$date
	Mon Jul 12 10:22:45 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module banco $end
$var wire 4 ! estado_actual [3:0] $end
$var wire 4 " sig_estado [3:0] $end
$var wire 1 # reset $end
$var wire 1 $ next_idle $end
$var wire 8 % next_bajo [7:0] $end
$var wire 8 & next_alto [7:0] $end
$var wire 1 ' next_active $end
$var wire 1 ( init $end
$var wire 1 ) idle_out $end
$var wire 8 * empty_fifos [7:0] $end
$var wire 1 + clk $end
$var wire 8 , bajo_out [7:0] $end
$var wire 8 - bajo [7:0] $end
$var wire 8 . alto_out [7:0] $end
$var wire 8 / alto [7:0] $end
$var wire 1 0 active_out $end
$scope module maq $end
$var wire 1 # reset $end
$var wire 1 ( init $end
$var wire 8 1 empty_fifos [7:0] $end
$var wire 1 + clk $end
$var wire 8 2 bajo [7:0] $end
$var wire 8 3 alto [7:0] $end
$var reg 8 4 FIFO_empties [7:0] $end
$var reg 1 0 active_out $end
$var reg 8 5 alto_out [7:0] $end
$var reg 8 6 bajo_out [7:0] $end
$var reg 4 7 estado_actual [3:0] $end
$var reg 1 ) idle_out $end
$var reg 1 ' next_active $end
$var reg 8 8 next_alto [7:0] $end
$var reg 8 9 next_bajo [7:0] $end
$var reg 1 $ next_idle $end
$var reg 4 : sig_estado [3:0] $end
$upscope $end
$scope module maqprob $end
$var wire 1 0 active_out $end
$var wire 8 ; alto_out [7:0] $end
$var wire 8 < bajo_out [7:0] $end
$var wire 1 ) idle_out $end
$var wire 1 ' next_active $end
$var wire 8 = next_alto [7:0] $end
$var wire 8 > next_bajo [7:0] $end
$var wire 1 $ next_idle $end
$var reg 8 ? alto [7:0] $end
$var reg 8 @ bajo [7:0] $end
$var reg 1 + clk $end
$var reg 8 A empty_fifos [7:0] $end
$var reg 4 B estado_actual [3:0] $end
$var reg 1 ( init $end
$var reg 1 # reset $end
$var reg 4 C sig_estado [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C
bx B
b0 A
b0 @
b0 ?
bx >
bx =
bx <
bx ;
b0 :
bx 9
bx 8
bx 7
bx 6
bx 5
b0 4
b0 3
b0 2
b0 1
x0
b0 /
bx .
b0 -
bx ,
0+
b0 *
x)
0(
x'
bx &
bx %
x$
0#
bx "
bx !
$end
#1
b1 :
b0 7
1+
#2
0+
#3
b0 %
b0 9
b0 >
b0 &
b0 8
b0 =
1#
b1 7
1+
#4
0+
#5
0$
0'
b0 :
b0 .
b0 5
b0 ;
b0 ,
b0 6
b0 <
0)
00
b0 7
b11110000 /
b11110000 3
b11110000 ?
b10011000 -
b10011000 2
b10011000 @
1+
#6
0+
#7
b11111010 /
b11111010 3
b11111010 ?
b110 -
b110 2
b110 @
1(
1+
#8
0+
#9
1+
#10
0+
#11
1+
#12
0+
#13
1+
#14
0+
#15
1+
#16
0+
#17
1+
#18
0+
#19
b11110000 /
b11110000 3
b11110000 ?
b10011000 -
b10011000 2
b10011000 @
1+
#20
0+
#21
1+
#22
0+
#23
1+
#24
0+
#25
1+
#26
0+
#27
b1 :
0#
1+
#28
0+
#29
b10 :
b1 7
1+
#30
0+
#31
1$
b10 7
1+
